{"version":3,"sources":["actions/actionCreators.js","actions/actionTypes.js","components/ChooseTown.js","components/Weather.js","App.js","reducers/chooseTownReducer.js","reducers/weatherReducer.js","store/index.js","index.js"],"names":["fetchTownSuccess","data","type","payload","fetchTown","dispatch","town","a","fetch","response","ok","Error","statusText","json","error","message","ChooseTown","useSelector","state","chooseTown","item","loading","useDispatch","onSubmit","e","preventDefault","className","id","placeholder","name","required","value","onChange","target","changeTownField","disabled","Weather","weather","isActive","main","wind","clouds","icon","role","temp","feels_like","description","src","alt","style","width","speed","all","App","initialState","reducer","combineReducers","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cd1ad83.chunk.js","sourcesContent":["import {\n  CHANGE_TOWN_FIELD,\n  FETCH_TOWN_REQUEST,\n  FETCH_TOWN_SUCCESS,\n  FETCH_TOWN_FAILURE,\n} from \"./actionTypes\";\n\nconst _urlBase =\n  \"//api.openweathermap.org/data/2.5/weather?appid=c9744564742f73ddda7ea74738df772a&units=metric&lang=ru&q=\";\n\nexport function changeTownField(name, value) {\n  return { type: CHANGE_TOWN_FIELD, payload: { name, value } };\n}\n\nexport function fetchTownRequest() {\n  return { type: FETCH_TOWN_REQUEST };\n}\n\nexport function fetchTownSuccess(data) {\n  return { type: FETCH_TOWN_SUCCESS, payload: { data } };\n}\n\nexport function fetchTownFailure(error) {\n  return { type: FETCH_TOWN_FAILURE, payload: { error } };\n}\n\nexport const fetchTown = async (dispatch, town) => {\n  dispatch(fetchTownRequest());\n  try {\n    const response = await fetch(`${_urlBase}${town}`);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(fetchTownSuccess(data));\n  } catch (error) {\n    dispatch(fetchTownFailure(error.message));\n  }\n};\n","export const CHANGE_TOWN_FIELD = 'CHANGE_TOWN_FIELD';\nexport const FETCH_TOWN_REQUEST = 'FETCH_TOWN_REQUEST';\nexport const FETCH_TOWN_SUCCESS = 'FETCH_TOWN_SUCCESS';\nexport const FETCH_TOWN_FAILURE = 'FETCH_TOWN_FAILURE';\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeTownField, fetchTown } from \"../actions/actionCreators\";\n\nexport default function ChooseTown() {\n  const { item, loading, error } = useSelector((state) => state.chooseTown);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    dispatch(changeTownField(name, value));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchTown(dispatch, item.town);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"exampleInputEmail1\"\n          placeholder=\"Введите город\"\n          name=\"town\"\n          required\n          value={item.town}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n        Дай погоду\n      </button>\n      <div>{error}</div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Weather() {\n  const { data, loading, error, isActive } = useSelector(\n    (state) => state.weather\n  );\n  const { name, main, weather, wind, clouds } = data;\n  const icon = data?.weather?.[0]?.icon;\n\n  if (loading) {\n    return (\n      <div className=\"spinner-border text-danger mt-3\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"alert alert-danger mt-3\" role=\"alert\">\n        Погоды не произошло, потому что произошла ошибка\n      </div>\n    );\n  }\n\n  if (!isActive) return null;\n\n  return (\n    <div className=\"weather mt-3\">\n      <table className=\"table table-striped table-dark\">\n        <thead>\n          <tr>\n            <th>Город</th>\n            <th>{name}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Температура (С)</td>\n            <td>{main?.temp}</td>\n          </tr>\n          <tr>\n            <td>Ощущается как (С)</td>\n            <td>{main?.feels_like}</td>\n          </tr>\n          <tr>\n            <td>{weather?.[0]?.description}</td>\n            <td>\n              <img\n                src={`https://openweathermap.org/img/wn/${icon}.png`}\n                alt=\"icon\"\n                style={{ width: \"35px\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>Ветер (м/с)</td>\n            <td>{wind?.speed}</td>\n          </tr>\n          <tr>\n            <td>Облачность (%)</td>\n            <td>{clouds?.all}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport ChooseTown from './components/ChooseTown';\nimport Weather from './components/Weather';\n\nexport default function App() {\n  return (\n    <div className=\"container mt-3\">\n      <ChooseTown/>\n      <Weather/>\n    </div>\n  );\n}\n","import {\n  CHANGE_TOWN_FIELD,\n  FETCH_TOWN_REQUEST,\n  FETCH_TOWN_SUCCESS,\n  FETCH_TOWN_FAILURE} from \"../actions/actionTypes\";\n\nconst initialState = {\n  item: {\n    town: ''\n  },\n  loading: false,\n  error: null\n}\n\nexport default function chooseTownReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_TOWN_FIELD:\n      const {name, value} = action.payload;\n      return {\n        ...state,\n        item: {\n          ...state.item,\n          [name]: value\n        }\n      }\n    case FETCH_TOWN_REQUEST:\n      return {...state, loading: true, error: null};\n    case FETCH_TOWN_SUCCESS:\n      return {...initialState};\n    case FETCH_TOWN_FAILURE:\n      const {error} = action.payload;\n      return {...state, loading: false, error};\n    default:\n      return state;\n  }\n}\n","import { FETCH_TOWN_REQUEST, FETCH_TOWN_SUCCESS, FETCH_TOWN_FAILURE } from \"../actions/actionTypes\";\n\nconst initialState = {\n  data: {},\n  loading: false,\n  error: null,\n  isActive: false\n}\n\nexport default function weatherReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TOWN_REQUEST:\n      return {...state, loading: true, error: null};\n    case FETCH_TOWN_SUCCESS:\n      const {data} = action.payload;\n      return {...state, data, loading: false, error: null, isActive: true};\n    case FETCH_TOWN_FAILURE:\n      const {error} = action.payload;\n      return {...state, loading: false, error};\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport chooseTownReducer from '../reducers/chooseTownReducer';\nimport weatherReducer from '../reducers/weatherReducer';\n\nconst reducer = combineReducers({\n  chooseTown: chooseTownReducer,\n  weather: weatherReducer\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}